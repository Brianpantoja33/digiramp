soundManager.setup({
  // disable or enable debug output
  debugMode: false,
  // use HTML5 audio for MP3/MP4, if available
  preferFlash: false,
  useFlashBlock: true,
  // path to directory containing SM2 SWF
  url: '../../swf/',
  // optional: enable MPEG-4/AAC support (requires flash 9)
  flashVersion: 9,
  html5PollingInterval: 100
});

soundManager.onready(function() {

  if ($('#load-player')[0]) {
    
    var digiramp_player = [];

    $( ".player" ).each(function( index ) {
      id = $(this).attr('id');
      digiramp_player.push(new digirampPlayer(id));
      
    });

  };
});

function convertTimeToString(timeFloat) {
  var hours = parseInt(timeFloat / 3600);
  var minutes = parseInt(timeFloat / 60) - hours
  var seconds = parseInt(timeFloat) - (minutes * 60)
  var msec = parseInt(timeFloat * 100) - (parseInt(timeFloat) * 100)
  var timeString = convertToTwoDigitString(hours) + ':' + convertToTwoDigitString(minutes) + ':' + convertToTwoDigitString(seconds) + ':' + convertToTwoDigitString(msec)
  return (timeString);
}

function convertToTwoDigitString(inInt) {
  if (inInt < 10) {
    return ("0" + parseInt(inInt));
  }
  return (inInt);
}

function positionInPercent(waweform, mousePosX) {
  return(mousePosX/$(waweform).width());
}


function createSound(sm_sound_id, digiramp_player, progress_bar){
  
  
  var smSound = soundManager.createSound({
    id: sm_sound_id,
    url: $(digiramp_player).attr('class'),
  });
  
  // progress bar
  smSound.load({
    whileloading: function() {
      var loaded = (this.bytesLoaded / this.bytesTotal) * 100;
      var pos = loaded.toString() + '%';
      $(progress_bar).css("width", pos);
      //console.log(pos);
      //$(progress_bar).html(pos);
    }
  });
  return smSound;
}




function digirampPlayer(i){
  var player_index    = parseInt(i)
  var player_button   = "#play_button_"     + player_index;                                 
  var player_head     = "#playhead_"        + player_index;
  var progress_bar    = "#load_bar_"        + player_index + ".progress-bar.load-position";
  var possition_tag   = "#position_"        + player_index + ".position";
  var digiramp_player = "#digiramp_player_" + player_index;
  var back_button     = "#back_button_"     + player_index;
  var play_button     = "#play_button_"     + player_index;
  var waveform        = "#waveform_"        + player_index;
  var expand_colapse  = "#expand_colapse_"  + player_index;
  var sm_sound_id     = "sound_"            + player_index;
  var playing         = false;
  var smSound         = null;
  
  //var no_sound        = true;
  

  // when a player colapses: stop it
  $(".multi_player").on('hide.bs.collapse', function (event) {
    
    colapsed_index = $(this).attr('index')
    if(colapsed_index == player_index){
      $(expand_colapse).html("<i class='fa fa-angle-double-down'></i>");
      smSound.pause();
      // show the play-button
      $(player_button).html("<i class='player-button fa fa-play'></i>");
      playing         = false;
    }
  });
  
  // when a player expandes for the first time: load sound
  $(".multi_player").on('show.bs.collapse', function (event) {
   
    expanded_index = $(this).attr('index')
    if( expanded_index == player_index){
       $(expand_colapse).html("<i class='fa fa-angle-double-up'></i>");
      // only load one time
      if( smSound == null){
        smSound = createSound(sm_sound_id, digiramp_player, progress_bar);
      }
      
    };
  });
  

  if ($(".just-load")[0]) {
    smSound = createSound(sm_sound_id, digiramp_player, progress_bar);
  }
  
  // show the play-button
  $(player_button).html("<i class='player-button fa fa-play'></i>");
  
  // set playhead height
  $(player_head).css("height", $(waveform).height());

  // set the duration
  var duration_string = convertTimeToString('0')
  $(possition_tag).text(duration_string);
  


  var durationEstimate = 100;
  $(player_button).click(function() {
    if(smSound != null){
      // change to pause button
      $(player_button).html('<i class="player-button fa fa-pause""></i>');
      playing = !playing;
      // play
      if (playing) {
        smSound.play({
          whileplaying: function() {
            // move playhead
            durationEstimate = this.durationEstimate
            playhead_pos = this.position / this.durationEstimate;
            pos = playhead_pos * waveform_width;

            var waveform_width = $(waveform).width();

            $(player_head).css("margin-left", playhead_pos * waveform_width);
            $('.playhead').css("height", $(waveform).height());            // <<<< make this react on window resize instead
          
            $(possition_tag).text(convertTimeToString(this.position * 0.001));
          },
          onfinish: function() {
            playing = false;
            $(play_button).html('<i class="player-button fa fa-play""></i>');
            smSound.setPosition(0);
            $(player_head).css("margin-left", 0); 
            $(possition_tag).text(convertTimeToString(this.position * 0.001));
          }
        
        });
      } else {
        // stop
        smSound.pause();
        // change back to play button
        $(play_button).html('<i class="player-button fa fa-play""></i>');
      };
    };
    
  });
  
  // detect mouse click on back button
  $(back_button).click(function(event) {
    smSound.setPosition(0);
  });

  // detect mouse click
  $(waveform).click(function(event) {
    //alert(waveform);
    var offset = $(waveform).offset();
    gotoSoundPosition = positionInPercent(waveform, event.pageX - offset.left);
    gotoSoundPosition *= durationEstimate;
    ///alert(event.pageX);
    smSound.setPosition(gotoSoundPosition);
  });
} 



