- received_message = @message.receiver != @user.id
#wrapper
  .full-width-top
    == render 'shared/navigationbar', page: 'messages' 
  
  
  #sidebar-wrapper
    ul class="sidebar-nav"
      == render 'users/shared/sidebar', selected: 'user'
  
  #page-content-wrapper
    .container-fluid
      .row
        .col-sm-5
          .help
            .help-text
              h2 Message center
            .help-button
              == render 'admin/helps/help', identifier: 'user messages'
          
        .col-sm-7
          == render 'messages/navigation', selected: ''
          
      .sexy_line
      .digi-box 
        - if @message.sender
          - unless  @message.sender.id == @user.id
            .row
              .col-sm-12
                -if received_message  &&  @message.user_can_reply( @user )

                  / Send message
                  = link_to new_message_digalog_path( sender: current_user, 
                                                      receiver: @message.sender,
                                                      title: "re: #{@message.title}",
                                                      subjebtable_id: @message.id,
                                                      subjebtable_type: 'Message'), remote: true do
                        .btn.btn-default
                          i.fa.fa-reply
                            '&nbsp;Reply
                
                
                  /= link_to "#", 'data-toggle'.to_sym => "modal", 'data-target'.to_sym => "#message_modal_#{@message.id.to_s}" do
                  /  .btn.btn-default
                  /    i.fa.fa-reply
                  /    '&nbsp;Reply
                - elsif @message.subjebtable_type == 'Connection'
                  .row
                    .col-sm-12.pull-down-12
                      = link_to new_message_digalog_path(sender: current_user, 
                                                        receiver: @message.sender, 
                                                        title: "re: #{@message.title}",
                                                        subjebtable_id: @message.id,
                                                        subjebtable_type: 'Message'), remote: true do
                            .btn.btn-default
                              i.fa.fa-reply
                                '&nbsp;Reply
                      .alert.alert-info
                        b You can reply to this invitation without accepting connecting to the inviter
                        ul
                           li The inviter can only contact you again if you accept this invitaion
                           li If you accept this invitation you can dismiss it at any time, and the inviter will be unable to contact you again
                        
          
          .pull-down-12
          .sexy_line
        .row
          .col-sm-12
            .sender-avatar
              = link_to image_tag( @message.sender.image_url(:avatar_48x48) ), user_path( @message.sender )
            .sender-info
              b = @message.sender.user_name
         

        
        
        
          
        .row
          .col-sm-12
            
            h4 = @message.title
            = simple_format @message.body

        .row
          .col-sm-9
            - case @message.subjebtable_type
            - when 'User'
              '&nbsp;
            - when 'Recording'
              '&nbsp;
            - when 'MusicSubmission'
              ruby:
                begin
                  if music_submission = MusicSubmission.cached_find(@message.subjebtable_id)
                    if recording = music_submission.recording
                    
                    end
                  end
                rescue
                
                end
              - if recording
                #digiWhams  class="/recordings/#{recording.id.to_s}"
                  == render 'recording', recording: recording
              - else
                .alert.alert-danger
                  '!Recording removed
              /ruby:
              /  begin
              /    /- if MusicSubmission.exists?(@message.subjebtable_id)
              /    /  - music_submission =  MusicSubmission.find(@message.subjebtable_id)
              /    /  - recording = music_submission.recording
              /    /  /= debug music_submission.recording
              /    /  #digiWhams  class="/recordings/#{recording.id.to_s}"
              /    /    == render 'recording', recording: recording
              /  rescue
              /  
              /  end
                
            - when 'Connection'
              - if connection = Connection.where( id: @message.subjebtable_id ).first
                .connection-invitation
                == render 'messages/connection_invitation', receiver: @message.receiver, connection: connection
                  /= simple_form_for [ @message.receiver , connection ], remote: true do |f|
                  /  = f.hidden_field :approved, value: true
                  /  = link_to "Dismiss", '#', class: 'btn btn-default'
                  /  '&nbsp;
                    /  = f.submit 'Accept invitation', class: 'btn btn-primary'
              - else
                
                '! Connection deleted
        
        
        
        
        
        
  == render 'shared/site_footer'    
 
- if @message.sender
  == render 'messages/modal', modal_id: "message_modal_#{@message.id.to_s}", recipient: @message.sender, subjebtable: @message, title: "re: #{@message.title}"
  
javascript:
  update_count();