- received_message = @message.receiver != @user.id
#wrapper
  .full-width-top
    == render 'shared/navigationbar', page: 'user' 
  
  
  #sidebar-wrapper
    ul class="sidebar-nav"
      == render 'users/shared/sidebar', selected: 'user'
  
  #page-content-wrapper
    .container-fluid
      .row
        .col-sm-5
          .help
            .help-text
              h2 Message center
            .help-button
              == render 'admin/helps/help', identifier: 'user messages'
          
        .col-sm-7
          == render 'messages/navigation', selected: ''
            
      .sexy_line
      .digi-box 
        .row
       
          .col-sm-6
            h4 = @message.title
            = simple_format @message.body
          .col-sm-3
        .row
          .col-sm-9
            - case @message.subjebtable_type
            - when 'User'
              '&nbsp;
            - when 'Recording'
              '&nbsp;
            - when 'MusicSubmission'
              ruby:
                begin
                  if music_submission = MusicSubmission.exists?(@message.subjebtable_id)
                    if recording = music_submission.recording
                    
                    end
                  end
                rescue
                
                end
              - if recording
                #digiWhams  class="/recordings/#{recording.id.to_s}"
                  == render 'recording', recording: recording
              - else
                .alert.alert-danger
                  '!Recording removed
              /ruby:
              /  begin
              /    /- if MusicSubmission.exists?(@message.subjebtable_id)
              /    /  - music_submission =  MusicSubmission.find(@message.subjebtable_id)
              /    /  - recording = music_submission.recording
              /    /  /= debug music_submission.recording
              /    /  #digiWhams  class="/recordings/#{recording.id.to_s}"
              /    /    == render 'recording', recording: recording
              /  rescue
              /  
              /  end
                
            - when 'Connection'
              - if connection = Connection.find( @message.subjebtable_id )
                .connection-invitation
                == render 'messages/connection_invitation', receiver: @message.receiver, connection: connection
                  /= simple_form_for [ @message.receiver , connection ], remote: true do |f|
                  /  = f.hidden_field :approved, value: true
                  /  = link_to "Dismiss", '#', class: 'btn btn-default'
                  /  '&nbsp;
                  /  = f.submit 'Accept invitation', class: 'btn btn-primary'
        .row
          .col-sm-12
            
            .pull-right
              - unless @message.sender.id == @user.id
                -if received_message  && @message.user_can_reply( @user )
                
                  = link_to "#", 'data-toggle'.to_sym => "modal", 'data-target'.to_sym => "#pmModal_#{@message.id.to_s}" do
                    .btn.btn-primary
                      i.fa.fa-reply
                      '&nbsp;Reply
                      
                  
              
        
              
                
            .col-sm-3
          
            
          
                  
                  
                    
            
          
        
        
        
        
        
        
        
  == render 'shared/site_footer'    
== render 'users/shared/mobile_links'
== render 'messages/modal', modal_id: "pmModal_#{@message.id.to_s}", recipient: @message.sender, subjebtable: @message
javascript:
  update_count();