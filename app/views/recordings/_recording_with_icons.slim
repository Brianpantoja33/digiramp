== render 'audio_player/show', recording: recording , description: description


.btn-group
  .visible-xs.btn-group-xs
    - if info
      = link_to user_recording_path(recording.user, recording), \
                class: "btn btn-default" do
        .blue-info
          i.fa.fa-info-circle
        
    
    -if current_user
      - like = Like.where(recording_id: recording.id, user_id: current_user.id).any?
      /- if Like.where(recording_id: recording.id, user_id: current_user.id).any?
      = link_to user_like_path( current_user, recording), method: :delete, remote: true, \
                class: "btn btn-default red-icon #{'unlike_recording_'+recording.id.to_s}", \
                style: "#{'display: none;' unless like}"  do
        i class="fa fa-heart "

      = link_to new_user_recording_like_path(current_user, recording), remote: true, \
                class: "btn btn-default #{'like_recording_'+recording.id.to_s}", \
                style: "#{'display: none;' if like}"  do
        i class="fa fa-heart"
      
      - if add_to_playlist
        button class="btn btn-default" data-toggle="modal" data-target="#playlistModal_#{recording.id.to_s}"
          i.fa.fa-list

      
      /share
      button class="btn btn-default" data-toggle="modal" data-target="#shareRecordingModal_#{recording.id.to_s}"
        i.fa.fa-share

        
    -else
      = link_to login_new_path, \
                class: "btn btn-default"  do
        i class="fa fa-heart"
      
    - if @authorized 
      - if edit
        = link_to edit_user_recording_privacy_path(current_user, recording), \
                  class: "btn btn-default"  do
          i class="fa fa-pencil"

        
      - if remove_from_playlist
        = link_to remove_from_playlist_path( @playlist, recording: recording), method: :delete, remote: true, \
                  class: "btn btn-default"  do
          i class="fa fa-times"

        
      - if delete
        = link_to user_recording_path(current_user, recording, public: true), \
                  method: :delete, \
                  remote: true, \
                  data: {confirm: "You are about to delete #{recording.title}"}, \
                  class: "btn btn-default"  do
          i class="fa fa-times"

        
  .hidden-xs.btn-group-xs
    - if info
      = link_to user_recording_path(recording.user, recording), \
                class: "btn btn-default" do
        .blue-info
          i.fa.fa-info-circle
          '&nbsp;
          'Info
        
    
    -if current_user
      - like = Like.where(recording_id: recording.id, user_id: current_user.id).any?
      /- if Like.where(recording_id: recording.id, user_id: current_user.id).any?
      = link_to user_like_path( current_user, recording), method: :delete, remote: true, \
                class: "btn btn-default red-icon #{'unlike_recording_'+recording.id.to_s}", \
                style: "#{'display: none;' unless like}"  do
        i class="fa fa-heart "
        '&nbsp;
        'Liked

      = link_to new_user_recording_like_path(current_user, recording), remote: true, \
                class: "btn btn-default #{'like_recording_'+recording.id.to_s}", \
                style: "#{'display: none;' if like}"  do
        i class="fa fa-heart"
        '&nbsp;
        'Like
      
      - if add_to_playlist
        button class="btn btn-default" data-toggle="modal" data-target="#playlistModal_#{recording.id.to_s}"
          i.fa.fa-list
          '&nbsp;
          'Playlists
      
      button class="btn btn-default" data-toggle="modal" data-target="#shareRecordingModal_#{recording.id.to_s}"
        i.fa.fa-share
        '&nbsp;
        'Share
        
      
        
      /= link_to new_share_recording_path(recording), \
      /          remote: true, \
      /          class: "btn btn-default"  do
      /  i class="fa fa-share"
      /  '&nbsp;
      /  'Share
      
    -else
      = link_to login_new_path, \
                class: "btn btn-default"  do
        i class="fa fa-heart"
        '&nbsp;
        'Likes
      - if add_to_playlist
        = link_to login_new_path, \
                  class: "btn btn-default"  do
          i.fa.fa-list
          '&nbsp;
          'Playlists
        
      = link_to login_new_path, \
                class: "btn btn-default"  do
        i class="fa fa-share"
        '&nbsp;
        'Share
      
    - if @authorized 
      - if edit
        = link_to edit_user_recording_privacy_path(current_user, recording), \
                  class: "btn btn-default"  do
          i class="fa fa-pencil"
          '&nbsp;
          'Edit
        
      - if remove_from_playlist
        = link_to remove_from_playlist_path( @playlist, recording: recording), method: :delete, remote: true, \
                  class: "btn btn-default"  do
          i class="fa fa-times"
          '&nbsp;
          'Remove
        
      - if delete
        = link_to user_recording_path(current_user, recording, public: true), \
                  method: :delete, \
                  remote: true, \
                  data: {confirm: "You are about to delete #{recording.title}"}, \
                  class: "btn btn-default"  do
          i class="fa fa-times"
          '&nbsp;
          'Delete
        
.pull-right
  .hidden-xs
    .small-symbols
      i class="fa fa-comments"
      '&nbsp;
      = pluralize(recording.comments.count, 'Comment')
      '&nbsp;|
      = link_to user_recording_likes_path(recording.user, recording)
        i class="fa fa-heart red-heart"
        '&nbsp;
        = pluralize(recording.likes.count, 'Like')  
        

        
      '&nbsp;|
      i class="fa fa-headphones"
      '&nbsp;
      = pluralize(recording.playbacks_count, 'Playback')
  .visible-xs
    .small-symbols
      i class="fa fa-comments"
      '&nbsp;|
      = link_to user_recording_likes_path(recording.user, recording)
        i class="fa fa-heart red-heart"
        
      '&nbsp;|
      i class="fa fa-headphones"
  
.sexy_line 

-if current_user
  == render 'playlists/select_playlist_form', recording: recording
  == render 'share_recordings/share_recordings_form', recording: recording