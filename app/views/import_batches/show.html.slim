
/- import_resoult =  @import_batch.transloadit.gsub("\"", "")
/- import_resoult = import_resoult.gsub("=>",": \"")
/- import_resoult = import_resoult.gsub(",", "\",")
/= debug import_resoult = import_resoult.gsub("\"nil\"", "nil").class.name
/-transloadets = []
/- @import_batch.transloadit.each do |t|
/  = debug t
#wrap
  .full-width-top
    == render 'admin/shared/navbar', page: 'account'         
  .container
    ==render 'admin/shared/messages'
    /-cache ([request.url, @account.recordings_uuid, current_user.role  ]) do
    .do
      == render 'shared/breadcrumbs', breadcrumbs: { links: { @account.title.to_sym => account_path(@account), \
                                                              assets: account_assets_path(@account), \
                                                              'create content'.to_sym => account_add_content_index_path(@account),\
                                                              'import batches'.to_sym => account_import_batches_path(@account),\
                                                              }, current: 'show'}
                                                              

      - blog =  Blog.cached_find('Import Batch')
      - post =  BlogPost.cached_find( 'Import Batch', blog)
      /.row
      == render 'shared/title', locals: { title: @import_batch.title, body: post.body, insert: 'edit'}
      
      
      .row
        .col-sm-12
          .panel
            .panel-body.digiramp_player
              div class="panel-group" id="accordion"
                - @recordings.each do |recording|
                  /= debug recording
                  == render 'recordings/recording', recording: recording
          hr
          .pull-right
            = link_to account_export_import_batch_work_path( @account, @import_batch, format: "csv") do
               .btn.btn-info.btn-lg
                 i class="fa fa-cloud-download"
                 '&nbsp;
                 'Download Works CVS
            '&nbsp;
            = link_to account_export_import_batch_path( @account, @import_batch, format: "csv") do
               .btn.btn-info.btn-lg
                 i class="fa fa-cloud-download"
                 '&nbsp;
                 'Download Recordings CVS
           
    
-cache (['footer', Admin.cached_find(1).version]) do      
  =render 'shared/footer'
