.activities
  h4
    a data-toggle="collapse" data-parent="#accordion" href="#collapse_activities"
      'My recent activities
      '&nbsp;
      i.fa.fa-eye
  
  div id="collapse_activities" class="panel-collapse collapse"   
    .box-content.scrollable  style="height: 312px; overflow-y: auto"
      .activities
        - @user.activities.where(recipient_type: ['Recording', 'Relationship', 'User', 'MusicSubmission']).order('id desc').first(64).each do |activity|
          /.sexy_line
          /= debug activity
          -case activity.owner_type
          
          -when 'Comment'
            
            - if activity.recipient_type == 'Playback'
              - if recording = Recording.where(id: activity.recipient_id).first
                i.fa.fa-comment
                .activity-title Recording
                .activity-link
                  = link_to recording.title, user_recording_path(recording.user, recording)
              - else
                i.fa.fa-headphones
                .activity-title Recording
                .activity-link.red-text.line-through
                  'Removed
        
            - elsif  activity.recipient_type == 'User'
              - if user = User.where(id: activity.recipient_id).first
                  i.fa.fa-comment
                  .activity-title User
                  .activity-link
                    = link_to user.user_name, user_path(user)
              - else
                i.fa.fa-headphones
                .activity-title Recording
                .activity-link.red-text.line-through
                  'Not a Member
            
            - elsif  activity.recipient_type == 'Recording'
              - if recording = Recording.where(id: activity.recipient_id).first
                i.fa.fa-comment
                .activity-title Recording
                .activity-link
                  = link_to recording.title, user_recording_path( activity.trackable, recording)
              - else
                i.fa.fa-headphones
                .activity-title Recording
                .activity-link.red-text.line-through
                  'Removed
                  
                  
          -when 'Like'
            - if recording = Recording.where(id: activity.recipient_id).first
              i class="fa fa-heart"
              .activity-title Recording
              .activity-link
                = link_to recording.title, user_recording_path(recording.user, recording)
            - else
              i.fa.fa-headphones
              .activity-title Recording
              .activity-link.red-text.line-through
                'Removed
                
          -when 'Playback'
            - if recording = Recording.where(id: activity.recipient_id).first
              i.fa.fa-headphones
              .activity-title Recording
              .activity-link
                = link_to recording.title, user_recording_path(recording.user, recording)
            - else
              i.fa.fa-headphones
              .activity-title Recording
              .activity-link.red-text.line-through
                'Removed
                
          -when 'Relationship'
            - if user = User.where(id: activity.recipient_id).first
              i class="fa fa-user"
              '&nbsp; Following
              = link_to user.user_name, user_path(user)
            - else
              i.fa.fa-headphones
              .activity-title Recording
              .activity-link.red-text.line-through
                'Not a Member
                
          -when 'User'
            -if activity.key == 'user.signed_in'
              i.fa.fa-user
              .activity-title Signed in
              .activity-link
                = time_ago_in_words(activity.created_at).titleize 
            /= debug activity.key == 'user.signed_in'
          -when 'Recording'
            - if activity.recipient_type ==  'MusicSubmission'
              i.fa.fa-plus-circle
              .activity-title Submsn...
              .activity-link
                ruby: 
                  begin
                    music_submission = activity.recipient
                    music_request    = music_submission.music_request
                    opportunity      = music_request.opportunity
                    url              = opportunity_opportunity_music_request_path(opportunity, music_request)
                  rescue
                    url              = nil
                  end
                = link_to( music_request.title, url) if url
    
          - else
            i.fa.fa-exclamation-triangle
            .activity-title  
              = activity.owner_type
              
          
            /- if user = User.where(id: activity.recipient_id).first
            /  h6 
            /    i class="fa fa-comment"
            /    '&nbsp; User
            /  = link_to user.full_name, user_path(user)
          .clearfix                  
      
    
  
  